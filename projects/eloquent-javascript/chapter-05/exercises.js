// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  var results = [];

  for(var i = 0; i < array.length; i++){
    var subarray = array[i];
    for(var j = 0; j < subarray.length; j++){
        results.push(subarray[j]);
    }
  }

  return results;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, testFunc, updateFunc, bodyFunc) {
  while(testFunc(value)){
    bodyFunc(value);
    value = updateFunc(value);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, func) {
  var array2 = array.filter(func);

  return array2.length === array.length;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {

  function isLeftScript(charCode){
    for(var i = 0; i < SCRIPTS.length; i++){
      var ranges = SCRIPTS[i].ranges;
      for(var j = 0; j < ranges.length; j++){
        if(ranges[j][0] <= charCode && charCode <= ranges[j][1]){
          return SCRIPTS[i].direction === "ltr";
        }
      }
    }
  }
  var left = 0;
  var right = 0;
  for(var i = 0; i < string.length; i++){
    if(isLeftScript(string.charCodeAt(i))){
      left++;
    }else{
      right++;
    }
  }

  if(left > right){
    return "ltr";
  }

  return "rtl";
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
